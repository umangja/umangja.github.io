<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Function Overloading on UMANG JAIN</title>
    <link>https://umangja.github.io/tags/function-overloading/</link>
    <description>Recent content in Function Overloading on UMANG JAIN</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Mon, 01 Feb 2021 19:00:44 +0530</lastBuildDate><atom:link href="https://umangja.github.io/tags/function-overloading/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Function Overloading</title>
      <link>https://umangja.github.io/posts/2021/02/function-overloading/</link>
      <pubDate>Mon, 01 Feb 2021 19:00:44 +0530</pubDate>
      
      <guid>https://umangja.github.io/posts/2021/02/function-overloading/</guid>
      <description>Function overloading is a way to exploit polymorphism in C++.
Function Overloading is the feature where two functions with same name but with different parameter type, no. of parameter can behave as two seperate functions.
Function overloading is compile time polymorphism
 Possible with type of paramter and number of parameter. But  int fun(int a); int fun(double a); fun(2.0) // error as float or double can be implicitely converted to int.</description>
    </item>
    
  </channel>
</rss>
